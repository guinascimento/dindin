#content	#profile_header		%h1			=Time.now.strftime('%B')	#profile_container		#left			%a{:href => new_invoice_path}				New Invoice		#profile_info			%table{:id => "operation-list"}				%thead					%tr						%th{:scope => "col", :class => "date"}							Date						%th{:scope => "col", :class => "title"}							Name						%th{:scope => "col", :class => "amount"}							Value						%th{:scope => "col", :class => "status"}							Paid ?						%th{:scope => "col", :class => "action"}				%tbody					- @invoices.each do |invoice|						%tr{:class => "new pending expense  operation this_month", :id => invoice.id}							%td{:class => "date"}								%span									=invoice.date.strftime('%d/%m/%Y')							%td{:class => "title"}								= invoice.name								= tags invoice							%td{:class => "amount"}								%span									=number_to_currency invoice.value, :unit=> 'R$ ', :separator => ',', :delimiter => '.'							%td{:class => "status"}								%span									=payed? invoice							%td{:class => "action"}								= link_to 'Edit', edit_invoice_path(invoice)								= link_to 'Remove', invoice, :method => :delete			%p				%span.residue					-if @invoices.count > 0						Debt: #{number_to_currency Invoice.sum(:value), :unit=> 'R$ ', :separator => ',', :delimiter => '.'}						%br						#{"----------------------------"}						%br						Salary: #{number_to_currency @user.salary, :unit=> 'R$ ', :separator => ',', :delimiter => '.'}						%br						%br						=residue @user.salary, Invoice.sum(:value)